<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="timer2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>107, 17</value>
  </metadata>
</root>